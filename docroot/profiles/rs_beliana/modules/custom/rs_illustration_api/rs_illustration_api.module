<?php

/**
 * @file
 * Ilustration API main file.
 */

/**
 * Implements hook_menu().
 */
function rs_illustration_api_menu() {
  return [
    'node/%node/publish-to-rs' => [
      'title' => t('Publish to RS'),
      'page callback' => 'drupal_get_form',
      'page arguments' => ['rs_illustration_api_publish_form', 1],
      'access callback' => 'rs_illustration_api_publish_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
    ],
  ];
}

/**
 * Implements hook_permission().
 */
function rs_illustration_api_permission() {
  return array(
    'publish ilustracia content' => array(
      'title' => t('Publish Ilustracia to RS'),
    )
  );
}

function rs_illustration_api_publish_form($form, &$form_state, $node) {
  $form['node'] = array(
    '#type' => 'value',
    '#value' => $node->nid
  );

  $form['actions'] = array(
    '#type' => 'actions'
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Publish'),
  );

  return $form;
}

function rs_illustration_api_publish_form_submit(&$form, &$form_state) {
  if ($node = node_load($form_state['values']['node'])) {
    $base_url = variable_get('rs_web_uri');

    if (!empty($base_url)) {
      $request_url = $base_url . '/api/ilustracia';

      if ($login = rs_illustration_api_rest_login($request_url)) {
        $attachments = array();

        if (!empty($node->field_obrazok_navrh_[LANGUAGE_NONE])) {
          foreach ($node->field_obrazok_navrh_[LANGUAGE_NONE] as $image) {
            if ($file = rs_illustration_api_rest_file($request_url, $image, $login)) {
              $attachments['field_obrazok_navrh_'][] = $file;
            }
          }
        }

        if (!empty($node->field_original[LANGUAGE_NONE])) {
          foreach ($node->field_original[LANGUAGE_NONE] as $image) {
            if ($file = rs_illustration_api_rest_file($request_url, $image, $login)) {
              $attachments['field_original'][] = $file;
            }
          }
        }

        if (!empty($node->field_subor_ilustracie[LANGUAGE_NONE])) {
          foreach ($node->field_subor_ilustracie[LANGUAGE_NONE] as $image) {
            if ($file = rs_illustration_api_rest_file($request_url, $image, $login)) {
              $attachments['field_subor_ilustracie'][] = $file;
            }
          }
        }

        if ($response = rs_illustration_api_rest_node($request_url, $node, $attachments, $login)) {
          $node->field_datum_prevzatia[LANGUAGE_NONE][0]['value'] = REQUEST_TIME;
          $node->field_prenesene_do_rs[LANGUAGE_NONE][0]['value'] = 1;
          workbench_moderation_moderate($node, 'published');
          node_save($node);

          drupal_set_message('Ilustracia odoslana do RS');
          drupal_goto('node/' . $node->nid);
        }
      }
    }
  }
}

function rs_illustration_api_publish_access($node) {
  if ($node->type == 'ilustracia' && $node->field_prenesene_do_rs[LANGUAGE_NONE][0]['value'] != 1 && user_access('publish ilustracia content')) {
    return TRUE;
  }

  return FALSE;
}

/* ----- CURL HELPER CALLBACKS ----- */

function rs_illustration_api_rest_login($base_url) {
  $user_data = array(
    'username' => variable_get('rs_web_login'),
    'password' => variable_get('rs_password_login'),
  );

  $data = array();
  $curl = curl_init($base_url . '/user/login');

  // LOGIN USER
  curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/json'));
  curl_setopt($curl, CURLOPT_POST, 1);
  curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($user_data));
  curl_setopt($curl, CURLOPT_HEADER, FALSE);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, CURLOPT_FAILONERROR, TRUE);

  $response = curl_exec($curl);
  $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);

  if ($http_code == 200) {
    $logged_user = json_decode($response);
  }
  else {
    $http_message = curl_error($curl);
    drupal_set_message('Auth error: ' . $http_message, 'error');
    return FALSE;
  }

  $data['session'] = $logged_user->session_name . '=' . $logged_user->sessid;

  // GET CSRF TOKEN
  curl_setopt_array($curl, array(
    CURLOPT_RETURNTRANSFER => 1,
    CURLOPT_URL => $base_url . '/user/token',
  ));

  curl_setopt($curl, CURLOPT_COOKIE, $data['session'] . "");

  $ret = new stdClass;
  $ret->response = curl_exec($curl);
  $data['token'] = json_decode($ret->response)->token;

  return $data;
}

function rs_illustration_api_rest_file($base_url, $file, $login) {
  $curl = curl_init($base_url . '/file');

  $data = array(
    'uri' => $file['uri'],
    'filename' => $file['filename'],
    'filepath' => $file['uri'],
    'file' => base64_encode(file_get_contents(file_create_url($file['uri']))),
  );

  curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/json', 'X-CSRF-Token: ' . $login['token']));
  curl_setopt($curl, CURLOPT_POST, 1);
  curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($data));
  curl_setopt($curl, CURLOPT_HEADER, FALSE);
  curl_setopt($curl, CURLOPT_COOKIE, $login['session'] . "");
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, CURLOPT_FAILONERROR, TRUE);

  $response = curl_exec($curl);
  $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);

  if ($http_code == 200) {
    return json_decode($response);
  }
  else {
    $http_message = curl_error($curl);
    drupal_set_message('File creating error: ' . $http_message, 'error');
  }

  return FALSE;
}

function rs_illustration_api_rest_node($base_url, $node, $attachments, $login) {
  $curl = curl_init($base_url . '/node');
  $term = taxonomy_term_load($node->field_lexikalna_skupina_il[LANGUAGE_NONE][0]['tid']);

  $data = array(
    'type' => $node->type,
    'title' => $node->title,
    'status' => $node->status,
    'title_field[und][0][value]' => $node->title,
    'field_popis[und][0][value]' => $node->field_popis[LANGUAGE_NONE][0]['value'],
    'field_popis[und][0][format]' => 'filtered_html',
    'field_lexikalna_skupina_il[und]' => $term->name,
    'field_zdroj_ilustracie[und]' => $node->field_zdroj_ilustracie[LANGUAGE_NONE][0]['value'],
    'field_komentar_instrukcie[und][0][value]' => $node->field_komentar_instrukcie[LANGUAGE_NONE][0]['value'],
    'field_drzitel_prav[und]' => $node->field_drzitel_prav[LANGUAGE_NONE][0]['value'],
    'field_institucia[und][0][value]' => $node->field_institucia[LANGUAGE_NONE][0]['value'],
    'field_komentar_instrukcie[und][0][value]' => $node->field_komentar_instrukcie[LANGUAGE_NONE][0]['value'],
    'field_licencia1[und]' => $node->field_licencia1[LANGUAGE_NONE][0]['value'],
    'field_meno_autora_diela[und][0][value]' => $node->field_meno_autora_diela[LANGUAGE_NONE][0]['value'],
    'field_meno_autora_snimky_diela[und][0][value]' => $node->field_meno_autora_snimky_diela[LANGUAGE_NONE][0]['value'],
    'field_modifikovane[und]' => $node->field_modifikovane[LANGUAGE_NONE][0]['value'],
    'field_na_zoradenie[und][0][value]' => $node->field_na_zoradenie[LANGUAGE_NONE][0]['value'],
    'field_nazov_diela[und][0][value]' => $node->field_nazov_diela[LANGUAGE_NONE][0]['value'],
    'field_odmena[und]' => $node->field_odmena[LANGUAGE_NONE][0]['value'],
    'field_popis_modifikacie[und][0][value]' => $node->field_popis_modifikacie[LANGUAGE_NONE][0]['value'],
    'field_pouzit[und]' => $node->field_pouzit[LANGUAGE_NONE][0]['value'],
    'field_url_autora_diela_l[und][0][url]' => $node->field_url_autora_diela_l[LANGUAGE_NONE][0]['url'],
    'field_url_diela_l[und][0][url]' => $node->field_url_diela_l[LANGUAGE_NONE][0]['url'],
    'field_url_textu_licencie_l[und][0][url]' => $node->field_url_textu_licencie_l[LANGUAGE_NONE][0]['url'],
  );

  if (!empty($attachments)) {
    foreach ($attachments as $field => $files) {
      foreach ($files as $key => $file) {
        $data[$field . '[und]'][] = array(
          'fid' => $file->fid,
          'uri' => $file->uri,
          'status' => 1,
          'display' => 1,
        );
      }
    }
  }

  curl_setopt($curl, CURLOPT_HTTPHEADER, array('Accept: application/json', 'X-CSRF-Token: ' . $login['token']));
  curl_setopt($curl, CURLOPT_POST, 1);
  curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($data));
  curl_setopt($curl, CURLOPT_HEADER, FALSE);
  curl_setopt($curl, CURLOPT_COOKIE, $login['session'] . "");
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, CURLOPT_FAILONERROR, TRUE);

  $response = curl_exec($curl);
  $http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE);

  if ($http_code == 200) {
    return json_decode($response);
  }
  else {
    $http_message = curl_error($curl);
    drupal_set_message('Node creating error: ' . $http_message, 'error');
  }

  return FALSE;
}
